"use client";
import React, { useState } from "react";
import Link from "next/link";
import { BsArrowLeftCircle } from "react-icons/bs";
import { Tabs, TabsList, TabsContent, TabsTrigger } from "@/components/ui/tabs";

// import data
import { blog } from "@/constant/index";
import CardBlog from "@/components/CardBlog";

// categories
const uniquesCategories = [
  "all blogs",
  ...new Set(blog.map((item) => item.category)),
];

const BlogPage = () => {
  const [categories, setCategories] = useState(uniquesCategories);
  const [category, setCategory] = useState("all blogs");

  const filteredBlogs = blog.filter((post) => {
    // if category is all projects, return all projects, else filter by category
    return category === "all blogs" ? post : post.category === category;
  });

  return (
    <section className="container mx-auto py-10">
      <div className="flex flex-col gap-y-3">
        <div className="flex items-center gap-x-2">
          <BsArrowLeftCircle className="text-2xl cursor-pointer text-primary">
            <Link href="/" />
          </BsArrowLeftCircle>
          <h5 className="text-muted-foreground text-sm">Homepage</h5>
        </div>
        <h1 className="text-2xl md:text-3xl font-medium lg:font-bold">
          Discover blog page
        </h1>
      </div>
      {/* tabs */}
      <Tabs defaultValue={category} className="mb-24 xl:mb-42 mt-14">
        <div className="flex flex-col md:flex-row gap-y-7 justify-start md:justify-between max-w-[400px] md:max-w-full mx-0">
          <div>
            <h5 className="uppercase text-sm text-muted-foreground text-start mb-2">
              filters
            </h5>
            <TabsList className="flex flex-wrap h-[120px] max-w-[400px] lg:max-w-[450px] justify-start gap-3 bg-transparent">
              {categories.map((category, index) => {
                return (
                  <TabsTrigger
                    onClick={() => setCategory(category)}
                    key={index}
                    value={category}
                    className="capitalize"
                  >
                    {category}
                  </TabsTrigger>
                );
              })}
            </TabsList>
          </div>

          <div className="w-full md:max-w-[320px] lg:max-w-[400px]">
            <h5 className="uppercase text-sm text-muted-foreground text-start mb-5">
              search
            </h5>
            <div
              className="relative flex "
              data-twe-input-wrapper-init
              data-twe-input-group-ref
            >
              <input
                type="search"
                className="peer block min-h-[auto] w-[350px] rounded-lg border-2 px-3 py-[0.32rem] leading-[1.6] outline-none transition-all duration-200 ease-linear focus:placeholder:opacity-100 peer-focus:text-primary data-[twe-input-state-active]:placeholder:opacity-100 motion-reduce:transition-none dark:text-white dark:placeholder:text-neutral-300 dark:autofill:shadow-autofill dark:peer-focus:text-primary [&:not([data-twe-input-placeholder-active])]:placeholder:opacity-0"
                placeholder="Search"
                aria-label="Search"
                id="search-focus"
                aria-describedby="basic-addon4"
              />
              <label
                for="search-focus"
                className="pointer-events-none absolute left-3 top-0 mb-0 max-w-[90%] origin-[0_0] truncate pt-[0.37rem] leading-[1.6] text-neutral-500 transition-all duration-200 ease-out peer-focus:-translate-y-[0.9rem] peer-focus:scale-[0.8] peer-focus:text-primary peer-data-[twe-input-state-active]:-translate-y-[0.9rem] peer-data-[twe-input-state-active]:scale-[0.8] motion-reduce:transition-none dark:text-neutral-400 dark:peer-focus:text-primary"
              >
                Search
              </label>
              <button
                className="absolute right-0 top-0 bottom-0 z-[2] -ms-0.5 flex items-center rounded-e bg-primary px-5 text-xs font-medium uppercase leading-normal text-white shadow-primary-3 transition duration-150 ease-in-out hover:bg-primary-accent-300 hover:shadow-primary-2 focus:bg-primary-accent-300 focus:shadow-primary-2 focus:outline-none focus:ring-0 active:bg-primary-600 active:shadow-primary-2 dark:shadow-black/30 dark:hover:shadow-dark-strong dark:focus:shadow-dark-strong dark:active:shadow-dark-strong"
                type="button"
                id="button-addon4"
                data-twe-ripple-init
                data-twe-ripple-color="light"
              >
                <span className="[&>svg]:h-5 [&>svg]:w-5">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"
                    />
                  </svg>
                </span>
              </button>
            </div>
          </div>
        </div>

        {/* tabs content */}
        <div className="text-lg mt-8 md:mt-14 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {filteredBlogs.map((post, index) => {
            return (
              <TabsContent key={index} value={category}>
                <CardBlog post={post} />
              </TabsContent>
            );
          })}
        </div>
      </Tabs>
    </section>
  );
};

export default BlogPage;
